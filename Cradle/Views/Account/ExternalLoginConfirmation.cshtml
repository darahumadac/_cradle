@model Cradle.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Register";
}



<div id="externalLoginConfirmationDiv" class="body-container col-lg-12">
    <div class="col-md-8">
        @using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            <h3>Associate your @ViewBag.LoginProvider account.</h3>
            
            @Html.AntiForgeryToken()
            

            <h4>Association Form</h4>
            <hr />
            <p class="text-info">
                You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong>.
                Please enter a user name for this site below and click the Register button to finish
                logging in.
            </p>
            
            @Html.ValidationSummary()
            
            <div class="form-group">
                @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.EmailAddress, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    <div class="control-label">@Html.DisplayFor(m => m.EmailAddress)</div>
                    @Html.HiddenFor(m => m.EmailAddress, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.MemberAccountType, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @foreach (var item in Enum.GetNames(typeof(Cradle.Models.Enums.Role)))
                    {
                        if (item.ToString().Equals(Cradle.Models.Enums.Role.Member.ToString()))
                        {
                            @Html.RadioButtonFor(m => m.MemberAccountType, item, new { @checked = "true", })
                        }
                        else
                        {
                            @Html.RadioButtonFor(m => m.MemberAccountType, item)
                        }
                        @Html.Label(item);
                        <br />
                    }
                </div>
            </div>
            
            //Designer Profile
            
            <div id="designerDiv" class="collapse">
                <hr />
                <h4>Designer Information</h4>
                <hr />

                <div id="businessDetailsDiv">
                    <div class="form-group">
                        @Html.LabelFor(m => m.BusinessName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.BusinessName, new { @class = "form-control" })
                        </div>
                        @Html.LabelFor(m => m.DateEstablished, new { @class = "col-md-3 control-label" })
                        <div class="col-md-2">
                            @Html.EditorFor(m => m.DateEstablished, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BusinessEmailAddresss, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.BusinessEmailAddresss, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BusinessMobile, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.BusinessMobile, new { @class = "form-control" })
                        </div>

                        @Html.LabelFor(m => m.BusinessLandline, new { @class = "col-md-3 control-label" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.BusinessLandline, new { @class = "form-control" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(m => m.StreetAddress, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.StreetAddress, new { @class = "form-control" })
                        </div>
                        @Html.LabelFor(m => m.BusinessCity, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(m => m.BusinessCity, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BusinessZipCode, new { @class = "col-md-2 control-label" })
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.BusinessZipCode, new { @class = "form-control" })
                        </div>
                        @Html.LabelFor(m => m.BusinessCountry, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.DropDownList("BusinessCountry", new List<SelectListItem>(),
                            new { @class = "input-medium form-control bfh-countries", @data_country = "PH" })
                        </div>
                    </div>
                </div>
            </div>
            
                    //Personal Profile
            <hr />
            <h4>Personal Information</h4>
            <hr />
            
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                <div class="col-md-3">
                    <div class="control-label">
                        @Html.DisplayFor(m => m.FirstName)
                    </div>
                    @Html.HiddenFor(m => m.FirstName, new { @class = "form-control" })
                </div>
                @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    <div class="control-label">
                        @Html.DisplayFor(m => m.LastName)
                    </div>
                    @Html.HiddenFor(m => m.LastName, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
                <div class="col-md-3">
                    @if (!String.IsNullOrEmpty(Model.City))
                    {
                        <div class="control-label">
                            @Html.DisplayFor(m => m.City, new { @class = "form-control" })
                            @Html.HiddenFor(m => m.City)
                        </div>
                    }
                    else
                    {
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                    }
                </div>
                @Html.LabelFor(m => m.Country, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @Html.DropDownList("Country", new List<SelectListItem>(),
                            new { @class = "input-medium form-control bfh-countries", @data_country = "PH" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.MobileNo, new { @class = "col-md-2 control-label" })
                <div class="col-md-3">
                    @if (!String.IsNullOrEmpty(Model.MobileNo))
                    {
                        <div class="control-label">
                            @Html.DisplayFor(m => m.MobileNo)
                            @Html.HiddenFor(m => m.MobileNo)
                        </div>
                    }
                    else
                    {
                        @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control" })
                    }
                </div>
                @Html.LabelFor(m => m.BirthDate, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @if (Model.BirthDate == DateTime.Today)
                    {
                        @Html.EditorFor(m => m.BirthDate, new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.DisplayFor(m => m.BirthDate)
                        @Html.HiddenFor(m => m.BirthDate)
                    }

                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Register" />
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/pagesJS")
    @Scripts.Render("~/bundles/formhelpers")
}
