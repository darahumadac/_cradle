@using Microsoft.Owin.Security


<h3 class="center">or Login using other Providers</h3>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
       <div>
           <p>
               Sorry, there is no Login via Google / Facebook account right now.  Kindly register using the Register link.
           </p>
       </div>
    }
    else
    {
        string action = Model.Action;
        string returnUrl = Model.ReturnUrl;
        using (Html.BeginForm(action, "Account", new { ReturnUrl = returnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList" class="col-md-6 col-md-push-3">

                @foreach (AuthenticationDescription p in loginProviders)
                {
                    string btnClass = string.Empty;
                    
                    
                    if(p.AuthenticationType == "Google")
                    {
                        btnClass = "google";
                        
                    }
                    else if(p.AuthenticationType == "Facebook")
                    {
                        btnClass = "facebook";
                    }
                    <div id="socialLoginDiv"class="col-md-offset-1 col-md-10">
                        <button type="submit" class="btn btn-default btn-social btn-@btnClass" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">
                            Log in with @p.AuthenticationType
                            <span class="fa fa-@btnClass">
                            </span>
                        </button>
                    </div>
                  
                }
                
            </div>
        }
    }
}
